{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSort","isReversed","setReverse","isAlphabet","ALPHABET","isLength","LENGTH","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","isSelected","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAU,WACrB,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAaJ,IAAaL,EAASU,SACnCC,EAAWN,IAAaL,EAASY,OAajCC,EAzCD,SACLA,EADK,GAGJ,IADCR,EACF,EADEA,SAAUE,EACZ,EADYA,WAENO,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQZ,GACN,KAAKL,EAASU,SACZ,OAAOM,EAAEE,cAAcD,GACzB,KAAKjB,EAASY,OACZ,OAAOI,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITZ,GACFO,EAAaM,UAGRN,EAoBOO,CAAkBpB,EAAiB,CAAEI,WAAUE,eACvDe,EAAaf,GAAcF,IAAaL,EAASI,KAEvD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAahB,IAEfiB,QAtBqB,kBAAMpB,EAAQN,EAASU,WAiB9C,iCAUA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAad,IAEjBe,QA/BmB,kBAAMpB,EAAQN,EAASY,SAyB5C,4BAWA,wBACEY,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAxCc,kBAAOlB,GAAYD,IAkCnC,qBAWEe,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA/CU,WAClBlB,GAAW,GACXF,EAAQN,EAASI,OA0CX,sBAUJ,6BACE,6BACGS,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCvHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.575d09c8.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [sortType, setSort] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n  const isAlphabet = sortType === SortType.ALPHABET;\n  const isLength = sortType === SortType.LENGTH;\n\n  const handleSortByAlphabet = () => setSort(SortType.ALPHABET);\n\n  const handleSortByLenght = () => setSort(SortType.LENGTH);\n\n  const handleReverse = () => (setReverse(!isReversed));\n\n  const handleReset = () => {\n    setReverse(false);\n    setSort(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n  const isSelected = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': !isAlphabet,\n          })}\n          onClick={handleSortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': !isLength },\n          )}\n          onClick={handleSortByLenght}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        { isSelected && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}